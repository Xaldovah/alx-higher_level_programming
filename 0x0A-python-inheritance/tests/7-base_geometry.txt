# doctest cases for BaseGeometry class

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.integer_validator(None, 12)

>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator('negative', -3)
Traceback (most recent call last):
ValueError: negative must be greater than 0

>>> bg.integer_validator('zero', 0)
Traceback (most recent call last):
ValueError: zero must be greater than 0

>>> bg.integer_validator('string', 'hello')
Traceback (most recent call last):
TypeError: string must be an integer

>>> bg.integer_validator('list', [1, 2, 3])
Traceback (most recent call last):
TypeError: list must be an integer

>>> bg.integer_validator('tuple', (4, 5, 6))
Traceback (most recent call last):
TypeError: tuple must be an integer

>>> bg.integer_validator('set', {7, 8, 9})
Traceback (most recent call last):
TypeError: set must be an integer

>>> bg.integer_validator('boolean', True)
Traceback (most recent call last):
TypeError: boolean must be an integer

>>> bg.integer_validator('none', None)
Traceback (most recent call last):
TypeError: none must be an integer

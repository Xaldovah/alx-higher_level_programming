# doctest cases for MyList class

>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list = MyList()
>>> my_list.print_sorted()
[]

>>> my_list = MyList()
>>> my_list.append(7)
>>> my_list.print_sorted()
[7]

>>> my_list = MyList()
>>> my_list.append(2)
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(1)
>>> my_list.print_sorted()
[1, 1, 2, 2, 3, 4]

>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> print(my_list)
[-1, -4, -2, -3, -5]

>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]

>>> print(my_list)
[-1, -4, -2, -3, -5]


my_list = MyList(3)
Traceback (most recent call last):
TypeError: 'int' object is not iterable

my_list = MyList(3.14)
Traceback (most recent call last):
TypeError: 'float' object is not iterable

my_list = MyList()
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

>>> my_list.print_sorted((2, 3, 4, 5))
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given

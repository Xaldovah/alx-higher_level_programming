1. Division matrix module

Import module:
        >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Function:
        A funcion that divides a matrix

        'matrix' and 'div' must be integers or floats,
	otherwise raise a TypeError exception
        with the following message 'matrix must be a matrix (list of lists)
	of integers/floats

Test Cases:

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix = [[1, 2, 3],[4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix = 'Car'
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided("Python", 6)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2, 3],[4, 5]], 9)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided((1, 2), 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2],[3, 4]])
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_divided([[9, '7'], [5, 6]], 8)
	Traceback (most recent call last):
	TypeError: unsupported operand type(s) for /: 'str' and 'int'

	>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "Python")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [['1', '2', '3'], ['4', '5', '6']]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: unsupported operand type(s) for /: 'str' and 'int'
